/*
 * Copyright (c) 2020 Gobierno de Espa√±a
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * SPDX-License-Identifier: MPL-2.0
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "es.gob.radarcovid"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 8
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resConfigs "es"

    }

    signingConfigs {
        test {
            storeFile file("../app.keystore")
            storePassword loadCredential("APPCENTER_KEYSTORE_PASSWORD", "test.storePassword")
            keyAlias loadCredential("APPCENTER_KEY_ALIAS", "test.keyAlias")
            keyPassword loadCredential("APPCENTER_KEY_PASSWORD", "test.keyPassword")
        }
        release {
            storeFile file("../upload.keystore")
            storePassword loadCredential("APPCENTER_KEYSTORE_PASSWORD", "release.storePassword")
            keyAlias loadCredential("APPCENTER_KEY_ALIAS", "release.keyAlias")
            keyPassword loadCredential("APPCENTER_KEY_PASSWORD", "release.keyPassword")
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        mock {
            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-debug.pro'
            signingConfig signingConfigs.release

            buildConfigField 'Boolean', 'isMock', 'true'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-debug.pro'

            buildConfigField 'Boolean', 'isMock', 'false'
        }
        internal {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (!isRunningOnAppCenter() && existProjectProperties())
                signingConfig signingConfigs.test

            buildConfigField 'Boolean', 'isMock', 'false'

            packagingOptions {
                exclude 'DebugProbesKt.bin'
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (existProjectProperties())
                signingConfig signingConfigs.release

            buildConfigField 'Boolean', 'isMock', 'false'

            packagingOptions {
                exclude 'DebugProbesKt.bin'
            }
        }

    }

    flavorDimensions 'environment'
    productFlavors {
        pre {
            dimension = 'environment'
            buildConfigField "Boolean", 'PRE', 'true'
            buildConfigField "Boolean", 'PRO', 'false'

            buildConfigField "String", 'API_URL', '"https://radarcovidpre.covid19.gob.es/"'

            buildConfigField 'String', 'BUCKET_URL', '"https://radarcovidpre.covid19.gob.es/dp3t/"'
            buildConfigField 'String', 'REPORT_URL', '"https://radarcovidpre.covid19.gob.es/dp3t/"'
            buildConfigField 'String', 'PUBLIC_KEY', '"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFdmx1bzYyTFVVcFllcVVGM3haWVhYSG03cjBGWApScENFbVBqTUlxUHVERjcvYmRua1FIbndxbVNoVzIvOU9BcllEd09FUUZmdEE4ZDV6T3NEZmh0T2NRPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t"'
            buildConfigField 'String', 'PUBLIC_KEY_VERIFICATION', '"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHYk1CQUdCeXFHU000OUFnRUdCU3VCQkFBakE0R0dBQVFCbUlXU0ptdGVGNkh2VnI0M1V5SzliZStlNkpPQgpDRjlVaXpMeis4a3padkVEc25nMGl3VEF3UVB0QzdBMDlzQjVMM3EwSUl1N250Yzd4U1VqSUdTakZvd0JXL0xPCnFtMTBYQ1NkUWNZT3BMTi85dUI1emZKVUZOY3B6Ynk4dDAzSlg3TUZiYi9vQm1pcFNNNHptSm1UajR3Qm9XZ2sKRlF6ZEJHcnAwR2laUU9WVXRtUT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="'

            buildConfigField 'String', 'CERTIFICATE_PIN', '"sha256/BZkFfM++uLfyl8jDpVoLvQWjyGm0xNAZRjEXy9jX798="'
        }
        pro {
            dimension = 'environment'
            buildConfigField "Boolean", 'PRE', 'false'
            buildConfigField "Boolean", 'PRO', 'true'

            buildConfigField "String", 'API_URL', '"https://radarcovid.covid19.gob.es/"'

            buildConfigField 'String', 'BUCKET_URL', '"https://radarcovid.covid19.gob.es/dp3t/"'
            buildConfigField 'String', 'REPORT_URL', '"https://radarcovid.covid19.gob.es/dp3t/"'
            buildConfigField 'String', 'PUBLIC_KEY', '"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFdmx1bzYyTFVVcFllcVVGM3haWVhYSG03cjBGWApScENFbVBqTUlxUHVERjcvYmRua1FIbndxbVNoVzIvOU9BcllEd09FUUZmdEE4ZDV6T3NEZmh0T2NRPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t"'
            buildConfigField 'String', 'PUBLIC_KEY_VERIFICATION', '"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHYk1CQUdCeXFHU000OUFnRUdCU3VCQkFBakE0R0dBQVFBWjM1ZzlhN1M2MjdXMVlpOEVsVmdNS012dkdUUAo5R0hiUHZHTzhLekNLQk84WTZOc0JSTHlJeWUwZmdxR0ZXM2Z5dHVxcnFSNi9wSllDUWFXN1IyUnY3OEF4OXJhCmlYbmRVSmVyVk9KSHJRaFgxbnMrTjZxaVUxT0I4a3dUaWVuaCtuZDVVbXZUN24vK3hod3djK1RYa1lnNDBxOVcKUTRiVjBMbHRWbGRUSUlTK1QxOD0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="'

            buildConfigField 'String', 'CERTIFICATE_PIN', '"sha256/V5NaZx/jvh7NR/Ne6tXTw/g2Pcu9ztv08prWsUh7czI="'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

androidExtensions {
    experimental = true
}

def isRunningOnAppCenter() {
    if (System.getenv("APP_CENTER")) {
        println "IS RUNNING ON APP CENTER"
        return true
    } else {
        println "IS NOT RUNNING ON APP CENTER"
        return false
    }
}

def existProjectProperties() {
    def propertiesFile = project.rootProject.file("project.properties")
    return propertiesFile.exists()
}

def loadCredential(String environmentVariableName, String propertyName) {
    String credential = System.getProperty(environmentVariableName)
    if (credential == null) {
        println environmentVariableName + " ENVIRONMENT VARIABLE NOT FOUND"
        def propertiesFile = project.rootProject.file("project.properties")
        if (propertiesFile.exists()) {
            def properties = new Properties()
            properties.load(propertiesFile.newDataInputStream())
            credential = properties.getProperty(propertyName)
        }
        if (credential == null)
            println propertyName + " PROPERTY NOT FOUND"
    } else {
        println environmentVariableName + "ENVIRONMENT VARIABLE FOUND"
    }
    if (credential == null)
        return ""
    else
        return credential
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    // The google exposure library, required for DP3T, is resolved by the aar located in libs folder

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:3.5.6"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation "org.mockito:mockito-core:3.5.6"

    //Views
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    implementation "org.funktionale:funktionale-either:1.2"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'

    //Event bus
    implementation 'com.squareup:otto:1.3.8'

    //Dependency Injection
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    api "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    api "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    //Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofitVersion"

    //WorkerManager
    implementation 'androidx.work:work-runtime:2.4.0'

    //JWT Token
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.1') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'org.bouncycastle:bcprov-jdk15on:1.65'

    //DP3T
    implementation 'org.dpppt:dp3t-sdk-android:1.0.5'
    implementation 'com.google.android.gms:play-services-tasks:17.2.0'

    //DP3T aar dependencies
    implementation 'com.google.android.gms:play-services-base:17.4.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha02'

}